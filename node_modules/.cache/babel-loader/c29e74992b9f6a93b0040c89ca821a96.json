{"ast":null,"code":"var _jsxFileName = \"/Users/sm/Desktop/\\u1100\\u1162\\u110B\\u1175\\u11AB/02.\\u1109\\u1161\\u110B\\u1175\\u1103\\u1173\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/01.company_money/pjt/frontend/src/components/rank/speach/Speach.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { Card, Col, Row, Modal, Button, Comment, List, Input, Form, notification } from 'antd';\nimport { EditOutlined, UserOutlined, KeyOutlined, SmileOutlined } from '@ant-design/icons';\nimport { FcCollaboration } from \"react-icons/fc\";\nimport Axios from 'axios';\nimport '../speach/Speach.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Speach = ({\n  uniq_num\n}) => {\n  _s();\n\n  const {\n    TextArea\n  } = Input;\n  const commentUrl = `http://localhost:8000/api/comment/${uniq_num}`;\n  const [comment, setComment] = useState([]);\n  useEffect(() => {\n    Axios.get(commentUrl).then(response => {\n      const {\n        data\n      } = response;\n      setComment(data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); // const data = [];\n  // const [data, setData] = useState([]);\n  // let pre_data = [];\n  // comment && comment.forEach((comment, index) => {   \n  //   let temp = {};\n  //   temp['author'] = comment.username;\n  //   temp['avatar'] = 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png';\n  //   temp['content'] = comment.content;\n  //   temp['datetime'] = moment().subtract(3, 'days').fromNow();\n  //   pre_data.push(temp);\n  // });\n  // setData(pre_data)\n\n  const [modalVisible, setModalVisible] = useState(false);\n\n  const modal = value => {\n    setModalVisible(value);\n  };\n\n  const onFinish = values => {\n    const {\n      company,\n      username,\n      password,\n      content\n    } = values;\n    const data = {\n      company,\n      username,\n      password,\n      content\n    };\n    Axios.post(\"http://localhost:8000/api/comment/\", data).then(response => {\n      notification.open({\n        message: '작성 완료',\n        icon: /*#__PURE__*/_jsxDEV(SmileOutlined, {\n          style: {\n            color: '#108ee9'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      });\n      modal(false);\n      setComment([...comment, response.data]);\n    }).catch(error => {\n      console.log(error.response);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"card_section\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 14,\n        offset: 5\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title_logo\",\n            children: /*#__PURE__*/_jsxDEV(FcCollaboration, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title_content\",\n            children: \"\\uC758\\uACAC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this),\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"replies_write\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: `${comment.length} replies`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              type: \"primary\",\n              onClick: () => modal(true),\n              children: [/*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 23\n              }, this), \" \\uAE00\\uC4F0\\uAE30\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          title: \"\\uD55C\\uAD6D\\uC804\\uB825\\uACF5\\uC0AC\",\n          centered: true,\n          visible: modalVisible,\n          onOk: () => modal(false),\n          onCancel: () => modal(false),\n          width: 1000,\n          okText: '게시',\n          cancelText: '취소',\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onFinish: onFinish,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  sm: {\n                    span: 6\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n                    name: \"company\",\n                    hidden: true,\n                    initialValue: uniq_num,\n                    children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                    name: \"username\",\n                    rules: [{\n                      required: true,\n                      message: '닉네임을 입력해주세요'\n                    }, {\n                      min: 3,\n                      message: '3글자 이상 입력해 주세요 :D'\n                    }, {\n                      max: 10,\n                      message: '최대 10글자까지 입력할 수 있어요 :D'\n                    }],\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      size: \"large\",\n                      prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 130,\n                        columnNumber: 53\n                      }, this),\n                      placeholder: \"* \\uB2C9\\uB124\\uC784(3\\uAE00\\uC790-10\\uAE00\\uC790)\",\n                      maxLength: 10\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: {\n                    span: 6,\n                    offset: 1\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                    name: \"password\",\n                    rules: [{\n                      required: true,\n                      message: '비밀번호를 입력해 주세요 :D'\n                    }, {\n                      min: 4,\n                      message: '4자를 입력해 주세요 :D'\n                    }, {\n                      max: 4,\n                      message: '4자를 입력해 주세요 :D'\n                    }],\n                    children: /*#__PURE__*/_jsxDEV(Input.Password, {\n                      size: \"large\",\n                      prefix: /*#__PURE__*/_jsxDEV(KeyOutlined, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 143,\n                        columnNumber: 62\n                      }, this),\n                      placeholder: \"* \\uBE44\\uBC00\\uBC88\\uD638(4\\uC790\\uB9AC)\",\n                      maxLength: 4\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"content\",\n                rules: [{\n                  required: true,\n                  message: '내용을 입력해 주세요 :D'\n                }, {\n                  min: 3,\n                  message: '3글자 이상 입력해 주세요 :D'\n                }, {\n                  max: 500,\n                  message: '최대 500글자까지 입력할 수 있어요 :D'\n                }],\n                children: /*#__PURE__*/_jsxDEV(TextArea, {\n                  placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694 :)\",\n                  autoSize: {\n                    minRows: 6,\n                    maxRows: 10\n                  },\n                  showCount: true,\n                  maxLength: 500\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"modal-hr\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              wrapperCol: {\n                offset: 8,\n                span: 16\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                children: \"\\uAC8C\\uC2DC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          className: \"comment-list\",\n          itemLayout: \"horizontal\",\n          dataSource: comment,\n          renderItem: comment => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment // actions={item.actions}\n            , {\n              author: comment.username,\n              avatar: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n              content: comment.content // datetime={moment().subtract(3, 'days').fromNow()}\n              // datetime={comment.created_at}\n              ,\n              datetime: moment('2021.07.17.00.30', 'YYYY.MM.DD.HH.mm ').fromNow()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Speach, \"ZKk9Fk3slooB6U+HNkVV5sVWuyI=\");\n\n_c = Speach;\nexport default Speach;\n\nvar _c;\n\n$RefreshReg$(_c, \"Speach\");","map":{"version":3,"sources":["/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/rank/speach/Speach.js"],"names":["React","useEffect","useState","moment","Card","Col","Row","Modal","Button","Comment","List","Input","Form","notification","EditOutlined","UserOutlined","KeyOutlined","SmileOutlined","FcCollaboration","Axios","Speach","uniq_num","TextArea","commentUrl","comment","setComment","get","then","response","data","catch","error","console","log","modalVisible","setModalVisible","modal","value","onFinish","values","company","username","password","content","post","open","message","icon","color","span","offset","width","length","required","min","max","minRows","maxRows","fromNow"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { Card, Col, Row, Modal, Button, Comment, List, Input, Form, notification } from 'antd';\nimport { EditOutlined,UserOutlined, KeyOutlined, SmileOutlined } from '@ant-design/icons';\nimport { FcCollaboration } from \"react-icons/fc\";\nimport Axios from 'axios';\nimport '../speach/Speach.scss';\n\n\n\n\nconst Speach = ({uniq_num}) => {\n    const { TextArea } = Input;\n\n    const commentUrl = `http://localhost:8000/api/comment/${uniq_num}`;\n\n    const [comment, setComment] = useState([])\n    useEffect(() => {\n      Axios.get(commentUrl)\n        .then(response => {\n          const {data} = response;\n          setComment(data);\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    }, [])\n\n\n    // const data = [];\n    // const [data, setData] = useState([]);\n    // let pre_data = [];\n\n    // comment && comment.forEach((comment, index) => {   \n    //   let temp = {};\n\n    //   temp['author'] = comment.username;\n    //   temp['avatar'] = 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png';\n    //   temp['content'] = comment.content;\n    //   temp['datetime'] = moment().subtract(3, 'days').fromNow();\n\n    //   pre_data.push(temp);\n    // });\n    // setData(pre_data)\n\n    const [modalVisible, setModalVisible] = useState(false);\n\n    const modal = (value) => {\n      setModalVisible(value)\n    } \n\n    const onFinish = (values) => {\n      const {company, username, password, content} = values;\n      const data = {company, username, password, content}\n\n      Axios.post(\"http://localhost:8000/api/comment/\", data)\n        .then(response => {\n            notification.open({\n              message: '작성 완료',\n              icon: <SmileOutlined style={{color: '#108ee9'}}/>\n            })\n\n            modal(false)\n\n            setComment([\n              ...comment,\n              response.data\n            ])\n        })\n        .catch(error => {\n          console.log(error.response)\n        })\n\n      \n    };\n\n    return (\n        <Row className=\"card_section\">\n            <Col xs={{span: 24}} sm={{ span: 14, offset: 5 }}>\n                <Card \n                  title={\n                    <span>\n                        <div className='title_logo'><FcCollaboration/></div> \n                        <div className='title_content'>의견</div>\n                    </span>\n                  } \n                  style={{ width: \"100%\" }}\n                >\n                \n                <Row className='replies_write'>\n                  <Col span={12}>\n                    {`${comment.length} replies`}\n                  </Col>\n                  <Col span={12}>\n                    <Button size=\"small\" type=\"primary\" onClick={() => modal(true)}>\n                      <EditOutlined/> 글쓰기\n                    </Button>\n                  </Col>\n                </Row>\n                \n                <Modal\n                  title=\"한국전력공사\"\n                  centered\n                  visible={modalVisible}\n                  onOk={() => modal(false)}\n                  onCancel={() => modal(false)}\n                  width={1000}\n                  okText={'게시'}\n                  cancelText={'취소'}\n                >\n                  <Form onFinish={onFinish}>\n                  <div>\n                  <Row>\n                    <Col sm={{ span: 6 }}>    \n                    <Form.Item\n                        name=\"company\"\n                        hidden={true}\n                        initialValue={uniq_num}\n                      >\n                        <Input/>\n                      </Form.Item>\n                      <Form.Item\n                        name=\"username\"\n                        rules={[\n                          { required: true, message: '닉네임을 입력해주세요' },\n                          { min: 3, message: '3글자 이상 입력해 주세요 :D' },\n                          { max: 10, message: '최대 10글자까지 입력할 수 있어요 :D' }\n                        ]}\n                      >\n                        <Input size=\"large\" prefix={<UserOutlined/>} placeholder=\"* 닉네임(3글자-10글자)\" maxLength={10}/>\n                      </Form.Item>\n                    \n                    </Col>\n                    <Col sm={{ span: 6, offset: 1 }}>\n                      <Form.Item\n                        name=\"password\"\n                        rules={[\n                          { required: true, message: '비밀번호를 입력해 주세요 :D' },\n                          { min: 4, message: '4자를 입력해 주세요 :D' },\n                          { max: 4, message: '4자를 입력해 주세요 :D' }\n                        ]}\n                      >\n                        <Input.Password size=\"large\" prefix={<KeyOutlined/>} placeholder=\"* 비밀번호(4자리)\" maxLength={4}/>\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                  </div>\n                  <div>\n                  <Form.Item\n                        name=\"content\"\n                        rules={[\n                          { required: true, message: '내용을 입력해 주세요 :D' },\n                          { min: 3, message: '3글자 이상 입력해 주세요 :D' },\n                          { max: 500, message: '최대 500글자까지 입력할 수 있어요 :D' }\n                        ]}\n                  >\n                    <TextArea  \n                      placeholder=\"내용을 입력해주세요 :)\"\n                      autoSize={{ minRows: 6, maxRows: 10 }}\n                      showCount maxLength={500} \n                    />\n                  </Form.Item>  \n                  </div>\n                  <hr className=\"modal-hr\"/>\n                  <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                      게시\n                    </Button>\n                  </Form.Item>\n\n                  </Form>\n                </Modal>\n                <List\n                  className=\"comment-list\"\n                  itemLayout=\"horizontal\"\n                  dataSource={comment}\n                  renderItem={comment => (\n                    <li>\n                      <Comment\n                        // actions={item.actions}\n                        author={comment.username}\n                        avatar= 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png'\n                        content={comment.content}\n                        // datetime={moment().subtract(3, 'days').fromNow()}\n                        // datetime={comment.created_at}\n                        datetime={moment('2021.07.17.00.30',  'YYYY.MM.DD.HH.mm ').fromNow()}\n                      />\n                    </li>\n                  )}\n                />\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nexport default Speach;"]},"metadata":{},"sourceType":"module"}