{"ast":null,"code":"var _jsxFileName = \"/Users/sm/Desktop/\\u1100\\u1162\\u110B\\u1175\\u11AB/02.\\u1109\\u1161\\u110B\\u1175\\u1103\\u1173\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/01.company_money/pjt/frontend/src/components/accounts/signup/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col, Form, Input, Button, notification, Card } from 'antd';\nimport { SmileOutlined } from '@ant-design/icons';\nimport '../signup/SignUp.scss';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  const history = useHistory();\n  const [emailError, setEmailError] = useState([]);\n  const [usernameError, setUsernameError] = useState([]);\n\n  const onFinish = values => {\n    const {\n      email,\n      username,\n      password\n    } = values;\n    setEmailError([]);\n    const data = {\n      email,\n      username,\n      password\n    };\n    Axios.post(\"http://localhost:8000/accounts/signup/\", data).then(response => {\n      notification.open({\n        message: '회원가입 완료',\n        description: '로그인 페이지로 이동합니다 :)',\n        icon: /*#__PURE__*/_jsxDEV(SmileOutlined, {\n          style: {\n            color: '#108ee9'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 27\n        }, this)\n      });\n      history.push('/accounts/sign_in');\n    }).catch(error => {\n      if (error.response) {\n        const errorMessages = error.response.data;\n        setEmailError(errorMessages.email);\n        setUsernameError(errorMessages.username);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: {\n          span: 8,\n          offset: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            className: \"form\",\n            name: \"basic\",\n            size: \"large\",\n            labelCol: {\n              span: 24\n            },\n            wrapperCol: {\n              span: 24\n            },\n            onFinish: onFinish,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"\\uC774\\uBA54\\uC77C\",\n              name: \"email\",\n              rules: [{\n                required: true,\n                message: \"이메일을 입력해 주세요 :)\"\n              }, {\n                message: \"이메일을 입력해 주dd세요 :)\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: '#ff4d4f'\n              },\n              children: emailError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"\\uB2C9\\uB124\\uC784\",\n              name: \"username\",\n              rules: [{\n                required: true,\n                message: \"닉네임을 입력해 주세요 :)\"\n              }, {\n                min: 3,\n                message: \"최소 3글자를 입력해주세요 :)\"\n              }, {\n                max: 10,\n                message: \"최대 10글자까지 입력할 수 있습니다 :)\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: '#ff4d4f'\n              },\n              children: usernameError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n              name: \"password\",\n              rules: [{\n                required: true,\n                message: \"비밀번호를 입력해 주세요 :)\"\n              }, {\n                min: 8,\n                message: \"최소 8글자를 입력해주세요 :)\"\n              }, {\n                max: 20,\n                message: \"최대 20글자를 입력해주세요 :)\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              wrapperCol: {\n                offset: 10,\n                span: 4\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                style: {\n                  width: '100%'\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(SignUp, \"sFwcU9P56hWG4GJfre3B5nU7itI=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/accounts/signup/SignUp.js"],"names":["React","useState","useHistory","Row","Col","Form","Input","Button","notification","Card","SmileOutlined","Axios","SignUp","history","emailError","setEmailError","usernameError","setUsernameError","onFinish","values","email","username","password","data","post","then","response","open","message","description","icon","color","push","catch","error","errorMessages","span","offset","required","min","max","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col, Form, Input, Button, notification, Card } from 'antd';\nimport { SmileOutlined } from '@ant-design/icons';\nimport  '../signup/SignUp.scss';\nimport Axios from 'axios';\n\nconst SignUp = () => {\n    const history = useHistory()\n    const [emailError, setEmailError] = useState([]);\n    const [usernameError, setUsernameError] = useState([]);\n\n    const onFinish = values => {\n        const {email, username, password} = values;\n\n        setEmailError([]);\n\n        const data = {email, username, password}\n        Axios.post(\"http://localhost:8000/accounts/signup/\", data)\n            .then(response => {\n                notification.open({\n                    message: '회원가입 완료',\n                    description: '로그인 페이지로 이동합니다 :)',\n                    icon: <SmileOutlined style={{color: '#108ee9'}}/>\n                })\n\n                history.push('/accounts/sign_in')\n            })\n            .catch(error => {\n                if(error.response){\n                    const errorMessages = error.response.data\n                    setEmailError(errorMessages.email)\n                    setUsernameError(errorMessages.username)\n                }\n            })\n        \n    }\n\n\n    return (\n        <>\n          <Row >\n              <Col sm={{ span: 8, offset: 8 }}>\n                <Card>\n                <Form\n                className=\"form\"\n                name=\"basic\"\n                size={\"large\"}\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}\n                onFinish={onFinish}\n                >\n                <h2>회원가입</h2>\n                <hr/>\n                <Form.Item\n                    label=\"이메일\"\n                    name=\"email\"\n                    rules={[\n                        { required: true, message: \"이메일을 입력해 주세요 :)\" },\n                        { message: \"이메일을 입력해 주dd세요 :)\" }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <p style={{color: '#ff4d4f'}}>\n                    {emailError}\n                </p>\n                <Form.Item\n                    label=\"닉네임\"\n                    name=\"username\"\n                    rules={[\n                        { required: true, message: \"닉네임을 입력해 주세요 :)\" },\n                        { min: 3, message: \"최소 3글자를 입력해주세요 :)\" },\n                        { max: 10, message: \"최대 10글자까지 입력할 수 있습니다 :)\" }\n                    ]}\n                >\n                    <Input/>\n                </Form.Item>\n\n                <p style={{color: '#ff4d4f'}}>\n                    {usernameError}\n                </p>\n                <Form.Item\n                    label=\"비밀번호\"\n                    name=\"password\"\n                    rules={[\n                        { required: true, message: \"비밀번호를 입력해 주세요 :)\" },\n                        { min: 8, message: \"최소 8글자를 입력해주세요 :)\" },\n                        { max: 20, message: \"최대 20글자를 입력해주세요 :)\" },\n                    ]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ offset: 10, span: 4 }}>\n                    <Button type=\"primary\" htmlType=\"submit\" style={{width:'100%'}}>\n                    Submit\n                    </Button>\n                </Form.Item>\n                </Form>\n                </Card>\n              </Col>\n          </Row>\n        </>\n    );\n};\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}