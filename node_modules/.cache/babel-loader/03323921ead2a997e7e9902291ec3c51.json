{"ast":null,"code":"var _jsxFileName = \"/Users/sm/Desktop/\\u1100\\u1162\\u110B\\u1175\\u11AB/02.\\u1109\\u1161\\u110B\\u1175\\u1103\\u1173\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/01.company_money/pjt/frontend/src/components/rank/table_list/tab/FirstTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport { Col, Row, Table, Badge, Spin } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FirstTable = ({\n  uniq_num\n}) => {\n  _s();\n\n  const rankColumn = [{\n    title: '순위',\n    dataIndex: 'rank',\n    key: '1'\n  }];\n  const columns = [{\n    title: '순위',\n    dataIndex: 'rank',\n    key: '1'\n  }, {\n    title: '기업',\n    width: 215,\n    dataIndex: 'name',\n    key: '2'\n  }, {\n    title: '기본급',\n    dataIndex: 'nomal',\n    key: '3',\n    sorter: {\n      compare: (a, b) => a.nomal - b.nomal\n    }\n  }, {\n    title: '고정수당',\n    dataIndex: 'fixed',\n    key: '4',\n    sorter: {\n      compare: (a, b) => a.fixed - b.fixed\n    }\n  }, {\n    title: '실적수당',\n    dataIndex: 'performance',\n    key: '5',\n    sorter: {\n      compare: (a, b) => a.performance - b.performance\n    }\n  }, {\n    title: '복리후생비',\n    dataIndex: 'benefit',\n    key: '6',\n    sorter: {\n      compare: (a, b) => a.benefit - b.benefit\n    }\n  }, {\n    title: '성과 상여금',\n    dataIndex: 'person_bonus',\n    key: '7',\n    sorter: {\n      compare: (a, b) => a.person_bonus - b.person_bonus\n    }\n  }, {\n    title: '경평 성과급',\n    dataIndex: 'company_bonus',\n    key: '8',\n    sorter: {\n      compare: (a, b) => a.company_bonus - b.company_bonus\n    }\n  }, {\n    title: '기타',\n    dataIndex: 'etc',\n    key: '9',\n    sorter: {\n      compare: (a, b) => a.etc - b.etc\n    }\n  }, {\n    title: '총 연봉',\n    key: 'operation',\n    fixed: 'right',\n    width: 100,\n    dataIndex: 'total',\n    sorter: {\n      compare: (a, b) => a.total - b.total,\n      multiple: 1\n    }\n  }];\n  const [all, setAll] = useState(\"processing\");\n  const [location, setLocation] = useState(\"default\");\n  const [superCompany, setSuperCompany] = useState(\"default\");\n  const [category, setCategory] = useState(\"default\");\n  const [allMoney, setAllMoney] = useState();\n  const [url, setUrl] = useState(`http://localhost:8000/api/first_money/${uniq_num}/all`);\n  useEffect(() => {\n    Axios.get(url).then(response => {\n      const {\n        data\n      } = response;\n      setAllMoney(data);\n      setAllData(data);\n    });\n  }, []); // 순위 생성\n\n  const rankData = [];\n  allMoney && allMoney.forEach((data, index) => {\n    let temp = {};\n    temp['key'] = index + 1;\n    temp['rank'] = index + 1;\n    rankData.push(temp);\n  });\n  console.log(rankData);\n  const [allData, setAllData] = useState();\n\n  const changeAll = () => {\n    if (all === \"default\") {\n      setAll(\"processing\");\n      setLocation(\"default\");\n      setSuperCompany(\"default\");\n      setCategory(\"default\");\n    }\n\n    setAllMoney(allData);\n  };\n\n  const [locationData, setLocationData] = useState();\n\n  const changeLocation = () => {\n    if (location === \"default\") {\n      setAll(\"default\");\n      setLocation(\"processing\");\n      setSuperCompany(\"default\");\n      setCategory(\"default\");\n\n      if (!locationData) {\n        setAllMoney();\n        Axios.get(`http://localhost:8000/api/first_money/${uniq_num}/location`).then(response => {\n          const {\n            data\n          } = response;\n          setLocationData(data);\n          setAllMoney(data);\n        });\n      } else {\n        setAllMoney(locationData);\n      }\n    }\n  };\n\n  const [authorityData, setAuthorityData] = useState();\n\n  const changeSuperCompany = () => {\n    if (superCompany === \"default\") {\n      setAll(\"default\");\n      setLocation(\"default\");\n      setSuperCompany(\"processing\");\n      setCategory(\"default\");\n\n      if (!authorityData) {\n        setAllMoney();\n        Axios.get(`http://localhost:8000/api/first_money/${uniq_num}/authority`).then(response => {\n          const {\n            data\n          } = response;\n          setAuthorityData(data);\n          setAllMoney(data);\n        });\n      } else {\n        setAllMoney(authorityData);\n      }\n    }\n  };\n\n  const [typeData, setTypeData] = useState();\n\n  const changeCategory = () => {\n    if (category === \"default\") {\n      setAll(\"default\");\n      setLocation(\"default\");\n      setSuperCompany(\"default\");\n      setCategory(\"processing\");\n\n      if (!typeData) {\n        setAllMoney();\n        Axios.get(`http://localhost:8000/api/first_money/${uniq_num}/type`).then(response => {\n          const {\n            data\n          } = response;\n          setTypeData(data);\n          setAllMoney(data);\n        });\n      } else {\n        setAllMoney(typeData);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"choice\",\n          children: [/*#__PURE__*/_jsxDEV(Badge, {\n            status: all,\n            onClick: changeAll,\n            text: \"\\uC804\\uCCB4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Badge, {\n            status: location,\n            onClick: changeLocation,\n            text: \"\\uC18C\\uC7AC\\uC9C0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Badge, {\n            status: superCompany,\n            onClick: changeSuperCompany,\n            text: \"\\uC8FC\\uBB34\\uBD80\\uCC98\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Badge, {\n            status: category,\n            onClick: changeCategory,\n            text: \"\\uAE30\\uAD00\\uC720\\uD615\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"table_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"table-colum\",\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 24\n        },\n        children: allMoney ? /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          dataSource: allMoney,\n          scroll: {\n            x: 1200\n          },\n          pagination: {\n            hideOnSinglePage: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Spin, {\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FirstTable, \"RVNIrnsHiFE0RBfE1cADfws6tpQ=\");\n\n_c = FirstTable;\nexport default FirstTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirstTable\");","map":{"version":3,"sources":["/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/rank/table_list/tab/FirstTable.js"],"names":["React","useEffect","useState","Axios","Col","Row","Table","Badge","Spin","FirstTable","uniq_num","rankColumn","title","dataIndex","key","columns","width","sorter","compare","a","b","nomal","fixed","performance","benefit","person_bonus","company_bonus","etc","total","multiple","all","setAll","location","setLocation","superCompany","setSuperCompany","category","setCategory","allMoney","setAllMoney","url","setUrl","get","then","response","data","setAllData","rankData","forEach","index","temp","push","console","log","allData","changeAll","locationData","setLocationData","changeLocation","authorityData","setAuthorityData","changeSuperCompany","typeData","setTypeData","changeCategory","span","x","hideOnSinglePage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,EAA0BC,KAA1B,EAAiCC,IAAjC,QAA4C,MAA5C;;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAC/B,QAAMC,UAAU,GAAG,CACf;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,SAAS,EAAE,MAA1B;AAAkCC,IAAAA,GAAG,EAAE;AAAvC,GADe,CAAnB;AAKE,QAAMC,OAAO,GAAG,CACd;AAAEH,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,SAAS,EAAE,MAA1B;AAAkCC,IAAAA,GAAG,EAAE;AAAvC,GADc,EAEX;AAAEF,IAAAA,KAAK,EAAE,IAAT;AAAeI,IAAAA,KAAK,EAAE,GAAtB;AAA2BH,IAAAA,SAAS,EAAE,MAAtC;AAA8CC,IAAAA,GAAG,EAAE;AAAnD,GAFW,EAGX;AAAEF,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,SAAS,EAAE,OAA3B;AAAoCC,IAAAA,GAAG,EAAE,GAAzC;AAA8CG,IAAAA,MAAM,EAAE;AAACC,MAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC;AAAhC;AAAtD,GAHW,EAIX;AAAET,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,SAAS,EAAE,OAA5B;AAAqCC,IAAAA,GAAG,EAAE,GAA1C;AAA+CG,IAAAA,MAAM,EAAE;AAACC,MAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACG,KAAF,GAAUF,CAAC,CAACE;AAAhC;AAAvD,GAJW,EAKX;AAAEV,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,SAAS,EAAE,aAA5B;AAA2CC,IAAAA,GAAG,EAAE,GAAhD;AAAqDG,IAAAA,MAAM,EAAE;AAACC,MAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACI,WAAF,GAAgBH,CAAC,CAACG;AAAtC;AAA7D,GALW,EAMX;AAAEX,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,SAAS,EAAE,SAA7B;AAAwCC,IAAAA,GAAG,EAAE,GAA7C;AAAkDG,IAAAA,MAAM,EAAE;AAACC,MAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACK,OAAF,GAAYJ,CAAC,CAACI;AAAlC;AAA1D,GANW,EAOX;AAAEZ,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,SAAS,EAAE,cAA9B;AAA8CC,IAAAA,GAAG,EAAE,GAAnD;AAAwDG,IAAAA,MAAM,EAAE;AAACC,MAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACM,YAAF,GAAiBL,CAAC,CAACK;AAAvC;AAAhE,GAPW,EAQX;AAAEb,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,SAAS,EAAE,eAA9B;AAA+CC,IAAAA,GAAG,EAAE,GAApD;AAAyDG,IAAAA,MAAM,EAAE;AAACC,MAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACO,aAAF,GAAkBN,CAAC,CAACM;AAAxC;AAAjE,GARW,EASX;AAAEd,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,SAAS,EAAE,KAA1B;AAAiCC,IAAAA,GAAG,EAAE,GAAtC;AAA2CG,IAAAA,MAAM,EAAE;AAACC,MAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACQ,GAAF,GAAQP,CAAC,CAACO;AAA9B;AAAnD,GATW,EAUX;AACGf,IAAAA,KAAK,EAAE,MADV;AAEGE,IAAAA,GAAG,EAAE,WAFR;AAGGQ,IAAAA,KAAK,EAAE,OAHV;AAIGN,IAAAA,KAAK,EAAE,GAJV;AAKGH,IAAAA,SAAS,EAAE,OALd;AAMGI,IAAAA,MAAM,EAAE;AAACC,MAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACS,KAAF,GAAUR,CAAC,CAACQ,KAAhC;AAAsCC,MAAAA,QAAQ,EAAE;AAAhD;AANX,GAVW,CAAhB;AAqBA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgB7B,QAAQ,CAAC,YAAD,CAA9B;AACA,QAAM,CAAC8B,QAAD,EAAWC,WAAX,IAA0B/B,QAAQ,CAAC,SAAD,CAAxC;AACA,QAAM,CAACgC,YAAD,EAAeC,eAAf,IAAkCjC,QAAQ,CAAC,SAAD,CAAhD;AACA,QAAM,CAACkC,QAAD,EAAWC,WAAX,IAA0BnC,QAAQ,CAAC,SAAD,CAAxC;AAEA,QAAM,CAACoC,QAAD,EAAWC,WAAX,IAA0BrC,QAAQ,EAAxC;AAGA,QAAM,CAACsC,GAAD,EAAMC,MAAN,IAAgBvC,QAAQ,CAAE,yCAAwCQ,QAAS,MAAnD,CAA9B;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACuC,GAAN,CAAUF,GAAV,EACKG,IADL,CACUC,QAAQ,IAAI;AACd,YAAM;AAACC,QAAAA;AAAD,UAASD,QAAf;AACAL,MAAAA,WAAW,CAACM,IAAD,CAAX;AACAC,MAAAA,UAAU,CAACD,IAAD,CAAV;AACH,KALL;AAMH,GAPQ,EAON,EAPM,CAAT,CArC6B,CA+C7B;;AACA,QAAME,QAAQ,GAAG,EAAjB;AAEAT,EAAAA,QAAQ,IAAIA,QAAQ,CAACU,OAAT,CAAiB,CAACH,IAAD,EAAOI,KAAP,KAAiB;AAC5C,QAAIC,IAAI,GAAG,EAAX;AAEAA,IAAAA,IAAI,CAAC,KAAD,CAAJ,GAAcD,KAAK,GAAG,CAAtB;AACAC,IAAAA,IAAI,CAAC,MAAD,CAAJ,GAAeD,KAAK,GAAG,CAAvB;AAEAF,IAAAA,QAAQ,CAACI,IAAT,CAAcD,IAAd;AACD,GAPW,CAAZ;AASAE,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AAEA,QAAM,CAACO,OAAD,EAAUR,UAAV,IAAwB5C,QAAQ,EAAtC;;AACA,QAAMqD,SAAS,GAAG,MAAK;AACrB,QAAGzB,GAAG,KAAK,SAAX,EAAqB;AACjBC,MAAAA,MAAM,CAAC,YAAD,CAAN;AACAE,MAAAA,WAAW,CAAC,SAAD,CAAX;AACAE,MAAAA,eAAe,CAAC,SAAD,CAAf;AACAE,MAAAA,WAAW,CAAC,SAAD,CAAX;AACH;;AAEDE,IAAAA,WAAW,CAACe,OAAD,CAAX;AACD,GATD;;AAWA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCvD,QAAQ,EAAhD;;AACA,QAAMwD,cAAc,GAAG,MAAK;AACxB,QAAG1B,QAAQ,KAAK,SAAhB,EAA0B;AACpBD,MAAAA,MAAM,CAAC,SAAD,CAAN;AACAE,MAAAA,WAAW,CAAC,YAAD,CAAX;AACAE,MAAAA,eAAe,CAAC,SAAD,CAAf;AACAE,MAAAA,WAAW,CAAC,SAAD,CAAX;;AAEA,UAAG,CAACmB,YAAJ,EAAiB;AACbjB,QAAAA,WAAW;AACXpC,QAAAA,KAAK,CAACuC,GAAN,CAAW,yCAAwChC,QAAS,WAA5D,EACKiC,IADL,CACUC,QAAQ,IAAI;AACd,gBAAM;AAACC,YAAAA;AAAD,cAASD,QAAf;AACAa,UAAAA,eAAe,CAACZ,IAAD,CAAf;AACAN,UAAAA,WAAW,CAACM,IAAD,CAAX;AACH,SALL;AAMH,OARD,MAQK;AACDN,QAAAA,WAAW,CAACiB,YAAD,CAAX;AACH;AACN;AACJ,GAnBD;;AAqBA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoC1D,QAAQ,EAAlD;;AACA,QAAM2D,kBAAkB,GAAG,MAAK;AAC5B,QAAG3B,YAAY,KAAK,SAApB,EAA8B;AAC1BH,MAAAA,MAAM,CAAC,SAAD,CAAN;AACAE,MAAAA,WAAW,CAAC,SAAD,CAAX;AACAE,MAAAA,eAAe,CAAC,YAAD,CAAf;AACAE,MAAAA,WAAW,CAAC,SAAD,CAAX;;AAEA,UAAG,CAACsB,aAAJ,EAAkB;AAChBpB,QAAAA,WAAW;AACXpC,QAAAA,KAAK,CAACuC,GAAN,CAAW,yCAAwChC,QAAS,YAA5D,EACKiC,IADL,CACUC,QAAQ,IAAI;AACd,gBAAM;AAACC,YAAAA;AAAD,cAASD,QAAf;AACAgB,UAAAA,gBAAgB,CAACf,IAAD,CAAhB;AAEAN,UAAAA,WAAW,CAACM,IAAD,CAAX;AACH,SANL;AAOC,OATH,MASO;AACDN,QAAAA,WAAW,CAACoB,aAAD,CAAX;AACH;AACN;AACJ,GApBD;;AAsBA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0B7D,QAAQ,EAAxC;;AACA,QAAM8D,cAAc,GAAG,MAAK;AACxB,QAAG5B,QAAQ,KAAK,SAAhB,EAA0B;AACtBL,MAAAA,MAAM,CAAC,SAAD,CAAN;AACAE,MAAAA,WAAW,CAAC,SAAD,CAAX;AACAE,MAAAA,eAAe,CAAC,SAAD,CAAf;AACAE,MAAAA,WAAW,CAAC,YAAD,CAAX;;AAEE,UAAG,CAACyB,QAAJ,EAAa;AACTvB,QAAAA,WAAW;AACXpC,QAAAA,KAAK,CAACuC,GAAN,CAAW,yCAAwChC,QAAS,OAA5D,EACCiC,IADD,CACMC,QAAQ,IAAI;AACd,gBAAM;AAACC,YAAAA;AAAD,cAASD,QAAf;AACAmB,UAAAA,WAAW,CAAClB,IAAD,CAAX;AACAN,UAAAA,WAAW,CAACM,IAAD,CAAX;AACH,SALD;AAMH,OARD,MAQK;AACDN,QAAAA,WAAW,CAACuB,QAAD,CAAX;AACH;AACN;AACJ,GAnBD;;AAyBF,sBACI;AAAA,4BACA,QAAC,GAAD;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,MAAM,EAAEhC,GAAf;AAAoB,YAAA,OAAO,EAAEyB,SAA7B;AAAwC,YAAA,IAAI,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,MAAM,EAAEvB,QAAf;AAAyB,YAAA,OAAO,EAAE0B,cAAlC;AAAkD,YAAA,IAAI,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,KAAD;AAAO,YAAA,MAAM,EAAExB,YAAf;AAA6B,YAAA,OAAO,EAAE2B,kBAAtC;AAA0D,YAAA,IAAI,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII,QAAC,KAAD;AAAO,YAAA,MAAM,EAAEzB,QAAf;AAAyB,YAAA,OAAO,EAAE4B,cAAlC;AAAkD,YAAA,IAAI,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,eAYA,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,EAAE,EAAE;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAjC;AAA6C,QAAA,EAAE,EAAE;AAAEA,UAAAA,IAAI,EAAE;AAAR,SAAjD;AAAA,kBAEC3B,QAAQ,gBAAG,QAAC,KAAD;AACZ,UAAA,OAAO,EAAEvB,OADG;AAEZ,UAAA,UAAU,EAAEuB,QAFA;AAGZ,UAAA,MAAM,EAAE;AAAE4B,YAAAA,CAAC,EAAE;AAAL,WAHI;AAIZ,UAAA,UAAU,EAAE;AAACC,YAAAA,gBAAgB,EAAE;AAAnB;AAJA;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAKH,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AAPN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAZA;AAAA,kBADJ;AA4BH,CA5KD;;GAAM1D,U;;KAAAA,U;AA8KN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport { Col, Row, Table, Badge, Spin} from 'antd';\n\nconst FirstTable = ({uniq_num}) => {\n    const rankColumn = [\n        { title: '순위', dataIndex: 'rank', key: '1' },\n      ]\n  \n  \n      const columns = [\n        { title: '순위', dataIndex: 'rank', key: '1' },\n           { title: '기업', width: 215, dataIndex: 'name', key: '2'},\n           { title: '기본급', dataIndex: 'nomal', key: '3', sorter: {compare: (a, b) => a.nomal - b.nomal} },\n           { title: '고정수당', dataIndex: 'fixed', key: '4', sorter: {compare: (a, b) => a.fixed - b.fixed} },\n           { title: '실적수당', dataIndex: 'performance', key: '5', sorter: {compare: (a, b) => a.performance - b.performance} },\n           { title: '복리후생비', dataIndex: 'benefit', key: '6', sorter: {compare: (a, b) => a.benefit - b.benefit} },\n           { title: '성과 상여금', dataIndex: 'person_bonus', key: '7', sorter: {compare: (a, b) => a.person_bonus - b.person_bonus} },\n           { title: '경평 성과급', dataIndex: 'company_bonus', key: '8', sorter: {compare: (a, b) => a.company_bonus - b.company_bonus} },\n           { title: '기타', dataIndex: 'etc', key: '9', sorter: {compare: (a, b) => a.etc - b.etc}},\n           {\n              title: '총 연봉',\n              key: 'operation',\n              fixed: 'right',\n              width: 100,\n              dataIndex: 'total',\n              sorter: {compare: (a, b) => a.total - b.total,multiple: 1},\n            },\n        ];\n  \n         \n      const [all, setAll] = useState(\"processing\");\n      const [location, setLocation] = useState(\"default\");\n      const [superCompany, setSuperCompany] = useState(\"default\");\n      const [category, setCategory] = useState(\"default\");\n  \n      const [allMoney, setAllMoney] = useState();\n      \n\n      const [url, setUrl] = useState(`http://localhost:8000/api/first_money/${uniq_num}/all`)\n      \n      useEffect(() => {\n          Axios.get(url)\n              .then(response => {\n                  const {data} = response;\n                  setAllMoney(data);\n                  setAllData(data);\n              })      \n      }, [])\n  \n  \n      // 순위 생성\n      const rankData = []\n    \n      allMoney && allMoney.forEach((data, index) => {\n        let temp = {}\n  \n        temp['key'] = index + 1\n        temp['rank'] = index + 1\n  \n        rankData.push(temp)\n      });\n\n      console.log(rankData)\n  \n      const [allData, setAllData] = useState();\n      const changeAll = () =>{\n        if(all === \"default\"){\n            setAll(\"processing\")\n            setLocation(\"default\")\n            setSuperCompany(\"default\")\n            setCategory(\"default\")\n        }\n\n        setAllMoney(allData);\n      }\n      \n      const [locationData, setLocationData] = useState()\n      const changeLocation = () =>{\n          if(location === \"default\"){\n                setAll(\"default\")\n                setLocation(\"processing\")\n                setSuperCompany(\"default\")\n                setCategory(\"default\")\n \n                if(!locationData){\n                    setAllMoney();\n                    Axios.get(`http://localhost:8000/api/first_money/${uniq_num}/location`)\n                        .then(response => {\n                            const {data} = response;\n                            setLocationData(data);\n                            setAllMoney(data);\n                        })   \n                }else{\n                    setAllMoney(locationData)\n                }            \n          }\n      }\n\n      const [authorityData, setAuthorityData] = useState()\n      const changeSuperCompany = () =>{\n          if(superCompany === \"default\"){\n              setAll(\"default\")\n              setLocation(\"default\")\n              setSuperCompany(\"processing\")\n              setCategory(\"default\")\n\n              if(!authorityData){\n                setAllMoney();\n                Axios.get(`http://localhost:8000/api/first_money/${uniq_num}/authority`)\n                    .then(response => {\n                        const {data} = response;\n                        setAuthorityData(data);\n                        \n                        setAllMoney(data)\n                    })   \n                }else{\n                    setAllMoney(authorityData)\n                }\n          }\n      }\n  \n      const [typeData, setTypeData] = useState()\n      const changeCategory = () =>{\n          if(category === \"default\"){\n              setAll(\"default\")\n              setLocation(\"default\")\n              setSuperCompany(\"default\")\n              setCategory(\"processing\")\n              \n                if(!typeData){\n                    setAllMoney();\n                    Axios.get(`http://localhost:8000/api/first_money/${uniq_num}/type`)\n                    .then(response => {\n                        const {data} = response;\n                        setTypeData(data);\n                        setAllMoney(data)\n                    })   \n                }else{\n                    setAllMoney(typeData)\n                }\n          }\n      }  \n  \n  \n        \n  \n\n    return (\n        <>\n        <Row>\n            <Col span={24}>\n                <div className=\"choice\">\n                    <Badge status={all} onClick={changeAll} text=\"전체\"/>\n                    <Badge status={location} onClick={changeLocation} text=\"소재지\"/>\n                    <Badge status={superCompany} onClick={changeSuperCompany} text=\"주무부처\"/>\n                    <Badge status={category} onClick={changeCategory} text=\"기관유형\"/>\n                </div>\n            </Col>\n        </Row>\n\n        <Row className=\"table_wrapper\">\n            <Col className=\"table-colum\" xs={{span: 24}} sm={{ span: 24}}>\n            \n            {allMoney ? <Table \n            columns={columns} \n            dataSource={allMoney} \n            scroll={{ x: 1200 }}\n            pagination={{hideOnSinglePage: false}} \n            /> :  <Spin size=\"large\"/>\n            }\n            \n            </Col>\n        </Row>    \n        </>\n    );\n};\n\nexport default FirstTable;"]},"metadata":{},"sourceType":"module"}