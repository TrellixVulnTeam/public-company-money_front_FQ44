[{"/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/index.js":"1","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/App.js":"2","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/pages/RankPage.js":"3","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/pages/IndexPage.js":"4","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/pages/accounts/SignUpPage.js":"5","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/rank/Rank.js":"6","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/applayout/AppLayOut.js":"7","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/main/Main.js":"8","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/rank/info/Info.js":"9","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/rank/ranking/Ranking.js":"10","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/rank/table_list/TableList.js":"11","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/rank/speach/Speach.js":"12","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/rank/ranking/tab/FirstRank.js":"13","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/rank/ranking/tab/AveRank.js":"14","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/rank/table_list/tab/FirstTable.js":"15","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/rank/table_list/tab/AveTable.js":"16","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/pages/accounts/SignInPage.js":"17","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/accounts/signup/SignUp.js":"18","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/accounts/signin/SignIn.js":"19","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/utils/useLocalStorage.js":"20","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/api.js":"21","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/Constants.js":"22"},{"size":273,"mtime":1625839018190,"results":"23","hashOfConfig":"24"},{"size":996,"mtime":1627216270688,"results":"25","hashOfConfig":"24"},{"size":699,"mtime":1627216267306,"results":"26","hashOfConfig":"24"},{"size":585,"mtime":1627216264460,"results":"27","hashOfConfig":"24"},{"size":290,"mtime":1625995255633,"results":"28","hashOfConfig":"24"},{"size":479,"mtime":1627010053828,"results":"29","hashOfConfig":"24"},{"size":1432,"mtime":1627018181878,"results":"30","hashOfConfig":"24"},{"size":3528,"mtime":1627313391411,"results":"31","hashOfConfig":"24"},{"size":3437,"mtime":1627214892429,"results":"32","hashOfConfig":"24"},{"size":1791,"mtime":1627009956151,"results":"33","hashOfConfig":"24"},{"size":1724,"mtime":1625842468773,"results":"34","hashOfConfig":"24"},{"size":9325,"mtime":1627289287902,"results":"35","hashOfConfig":"24"},{"size":5596,"mtime":1627373236938,"results":"36","hashOfConfig":"24"},{"size":5594,"mtime":1627010496545,"results":"37","hashOfConfig":"24"},{"size":5915,"mtime":1627010617298,"results":"38","hashOfConfig":"24"},{"size":5599,"mtime":1627302044237,"results":"39","hashOfConfig":"24"},{"size":290,"mtime":1626018892167,"results":"40","hashOfConfig":"24"},{"size":3687,"mtime":1626019179260,"results":"41","hashOfConfig":"24"},{"size":2744,"mtime":1626079137028,"results":"42","hashOfConfig":"24"},{"size":1242,"mtime":1626019801031,"results":"43","hashOfConfig":"24"},{"size":252,"mtime":1627004164236,"results":"44","hashOfConfig":"24"},{"size":80,"mtime":1627003947644,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1ejdzzy",{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/index.js",[],["99","100"],"/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/App.js",["101","102","103"],"import React, { useEffect } from 'react';\nimport ReactGA from 'react-ga';\nimport {Route, Switch} from 'react-router-dom'\nimport IndexPage from './pages/IndexPage';\nimport RankPage from './pages/RankPage';\nimport { createBrowserHistory } from 'history';\n\nconst App = () => {\n  // ReactGA.initialize(\"UA-203105090-1\");\n  // ReactGA.set({page: window.location.pathname});\n  // ReactGA.pageview(window.location.pathname + window.location.search);\n\n  // ReactGA.initialize(\"UA-203105090-1\", { debug: true });\n  // const history = createBrowserHistory();\n  // history.listen((location) => {\n  //   ReactGA.set({ page: location.pathname }); // Update the user's current page\n  //   ReactGA.pageview(window.location.pathname + window.location.search); // Record a pageview for the given page\n  // });\n\n\n  return (\n        <Switch>\n          <Route exact path='/rank/:uniq_num' component={RankPage}/>\n          <Route exact path='/' component={IndexPage}/>\n        </Switch>\n\n  );\n};\n\n\nexport default App;","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/pages/RankPage.js",[],"/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/pages/IndexPage.js",[],"/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/pages/accounts/SignUpPage.js",[],["104","105"],"/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/rank/Rank.js",[],"/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/applayout/AppLayOut.js",["106"],"import React from 'react';\nimport { Row, Col, Layout, Image } from 'antd';\nimport Logo from '../../images/logo.png';\nimport { Link } from 'react-router-dom';\nimport './AppLayOut.scss';\n\nconst AppLayOut = ({children}) => {\n\n    const { Header, Footer, Content } = Layout;\n\n    \n    return (\n        <Layout>\n            <Header className='header'>\n                <Row>\n                    <Col xs={{span: 24}} sm={{ span: 22, offset: 2 }}>\n                        <h1>\n                            <Link to=\"/\">\n                                <img className = \"logo\" src={Logo}  alt='공기업 연봉 순위'/>\n                            </Link>\n                        </h1>\n                    </Col>\n                    {/* <Col span={10} className='user-button' style = {{textAlign: 'right'}}>\n                    </Col> */}\n                </Row>\n            </Header>\n            \n            <Content className='main'>\n                {children}\n            </Content>\n\n            <Footer className='footer'>\n                <Row className='footer-section'>\n                    <Col span={24}>\n                        <p>위 사이트는 공공기관 경영정보 공개시스템 '알리오'에 공시된 자료를 기반으로 만들어졌습니다.</p>\n                        <p>© Octopus</p>\n                    </Col>\n                </Row>\n            </Footer>\n        </Layout>\n    );\n};\n\nexport default AppLayOut;","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/main/Main.js",[],"/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/rank/info/Info.js",["107"],"import React, { useEffect, useState } from 'react';\nimport { Descriptions, Row, Col,Collapse, Image } from 'antd';\nimport { axiosInstance } from '../../../api';\nimport './Info.scss';\n\nconst Info = ({uniq_num}) => {\n\n    const { Panel } = Collapse;\n\n    const firstMoneyUrl = `/api/first_money/${uniq_num}`\n    const aveMoneyUrl = `/api/ave_money/${uniq_num}`\n\n    const [firstTotal, setFirstTotal] = useState('')\n    const [aveTotal, setAVeTotal] = useState('')\n\n    const [name, setName] = useState('')\n    const [location, setLocation] = useState('')\n    const [img, setImg] = useState('')\n    const [authority, setAuthority] = useState('')\n    const [type, setType] = useState('')\n    const [purpose, setPurpose] = useState('')\n    const [setting, setSetting] = useState('')\n\n    useEffect(() => {\n        \n        axiosInstance.get(firstMoneyUrl)\n            .then(response => {\n                const {data} = response;\n                setName(data.name)\n                setLocation(data.company.location)\n                setImg(data.company.img_url)\n                setAuthority(data.company.authority)\n                setType(data.company.type)\n                setPurpose(data.company.purpose)\n                setSetting(data.company.function)\n\n                setFirstTotal(data.total)\n            })\n            .catch(error => {\n                window.history.back();\n            })\n\n            axiosInstance.get(aveMoneyUrl)\n                .then(response => {\n                    const {data} = response;\n                    setAVeTotal(data.total)\n                })\n                .catch(error => {\n                    setAVeTotal(\"-\")\n            })\n            \n    }, [])\n\n\n    function moneyToUnit(money) {\n        return money.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    }    \n\n\n    return (\n        <Row className=\"info_wrapper\">\n            <Col xs={{span: 24}} sm={{ span: 14, offset: 5 }}>\n                <Image width={200} src={img} alt={name} preview={false}/>\n                <Descriptions  size='small' bordered>\n                    <Descriptions.Item label=\"초봉\" span={2}>{moneyToUnit(firstTotal)} 천원</Descriptions.Item>\n                    <Descriptions.Item label=\"평균연봉\" span={2}>{moneyToUnit(aveTotal)} 천원</Descriptions.Item>\n                    <Descriptions.Item label=\"위치\">{location}</Descriptions.Item>\n                    <Descriptions.Item label=\"주무기관\">{authority}</Descriptions.Item>\n                    <Descriptions.Item label=\"기관유형\">{type}</Descriptions.Item>\n                </Descriptions>\n\n                <Collapse expandIconPosition='right'>\n                <Panel  header=\"설립목적\" key=\"1\">\n                {\n                purpose.split('\\n').map( line => {\n                    return (\n                    <span>{line}<br/></span>\n                    )\n                })\n                }\n                </Panel>\n                <Panel  header=\"주요 기능\" key=\"2\">\n                {\n                setting.split('\\n').map( line => {\n                    return (\n                    <span>{line}<br/></span>\n                    )\n                })\n                }\n                </Panel>\n                </Collapse>\n            </Col>\n            <Col className=\"source\"xs={{span: 24}} sm={{ span: 14, offset: 5 }}>\n                출처: 알리오('21년)\n            </Col>\n      </Row>\n    );\n};\n\nexport default Info;","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/rank/ranking/Ranking.js",[],"/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/rank/table_list/TableList.js",[],"/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/rank/speach/Speach.js",["108","109"],"import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { Card, Col, Row, Modal, Button, Comment, List, Input, Form, notification } from 'antd';\nimport { EditOutlined,UserOutlined, KeyOutlined, SmileOutlined } from '@ant-design/icons';\nimport { FcCollaboration } from \"react-icons/fc\";\nimport { axiosInstance } from '../../../api';\nimport '../speach/Speach.scss';\n\n\n\n\nconst Speach = ({uniq_num}) => {\n    const { TextArea } = Input;\n\n    const commentUrl = `/api/comment/${uniq_num}`;\n    const idUrl = `/api/first_money/${uniq_num}`;\n    const [comment, setComment] = useState([])\n    const [companyId, setCompanyId] = useState();\n    useEffect(() => {\n      axiosInstance.get(commentUrl)\n        .then(response => {\n          const {data} = response;\n          setComment(data);\n        })\n        .catch(error => {\n          // console.log(error)\n        })\n\n      axiosInstance.get(idUrl)\n        .then(response => {\n          const {data} = response;\n          setCompanyId(data.company.id);\n        })\n        .catch(error => {\n          // console.log(error)\n        })\n\n    }, [])\n\n\n\n\n    const [modalVisible, setModalVisible] = useState(false);\n\n    const modal = (value) => {\n      setModalVisible(value)\n    } \n\n    const onFinish = (values) => {\n      const {company, username, password, content} = values;\n      const data = {company, username, password, content}\n      const headers = {\n        \"contentType\": \"application/json\"\n      }\n      axiosInstance.post(\"/api/comment/\", data, headers)\n        .then(response => {\n            notification.open({\n              message: '작성 완료',\n              icon: <SmileOutlined style={{color: '#108ee9'}}/>\n            })\n\n            modal(false)\n\n            setComment([\n              ...comment,\n              response.data\n            ])\n        })\n        .catch(error => {\n          notification.open({\n            message: '작성이 완료되지 않았습니다 :(',\n            icon: <SmileOutlined style={{color: '#108ee9'}}/>\n          })\n        })\n\n      \n    };\n\n\n    const [commentModal, setCommentModal] = useState(false)\n    const [commentId, setCommentId] = useState(0)\n    const handleRemove = (id) => {\n      setCommentId(id)\n      setCommentModal(true)\n    }\n\n    const checkPassword = (values) => {\n      const {password} = values\n\n      const deleteUrl = `/api/comment/delete/${commentId}`;\n      axiosInstance.post(deleteUrl, values)\n        .then(response => {\n\n          setComment(comment.filter(comment => comment.id !== commentId))\n          setCommentModal(false)\n\n          notification.open({\n            message: '댓글 삭제 완료',\n            icon: <SmileOutlined style={{color: '#ff0000'}}/>\n          })\n        })\n        .catch(error => {\n          notification.open({\n            message: '댓글 삭제가 되지 않았습니다 :(',\n            icon: <SmileOutlined style={{color: '#ff0000'}}/>\n          })\n        })\n    }\n\n    return (\n        <Row className=\"card_section\">\n            <Col xs={{span: 24}} sm={{ span: 14, offset: 5 }}>\n                <Card \n                  title={\n                    <span>\n                        <div className='title_logo'><FcCollaboration/></div> \n                        <div className='title_content'>의견</div>\n                    </span>\n                  } \n                  style={{ width: \"100%\" }}\n                >\n                \n                <Row className='replies_write'>\n                  <Col span={12}>\n                    {`${comment.length} replies`}\n                  </Col>\n                  <Col span={12}>\n                    <Button size=\"small\" type=\"primary\" onClick={() => modal(true)}>\n                      <EditOutlined/> 글쓰기\n                    </Button>\n                  </Col>\n                </Row>\n                \n                <Modal\n                  title=\"여러분들의 의견을 적어주세요 :)\"\n                  centered\n                  visible={modalVisible}\n                  onCancel={() => modal(false)}\n                  width={1000}\n                  okText={'게시'}\n                  cancelText={'취소'}\n                >\n                  <Form onFinish={onFinish}  data-netlify=\"true\">\n                  <div>\n                  <Row>\n                    <Col xs={{span: 24}} sm={{ span: 11 }}>    \n                    <Form.Item\n                        name=\"company\"\n                        hidden={true}\n                        initialValue={companyId}\n                      >\n                      </Form.Item>\n                      <Form.Item\n                        name=\"username\"\n                        rules={[\n                          { required: true, message: '닉네임을 입력해주세요' },\n                          { min: 3, message: '3글자 이상 입력해 주세요 :D' },\n                          { max: 10, message: '최대 10글자까지 입력할 수 있어요 :D' }\n                        ]}\n                      >\n                        <Input size=\"large\" prefix={<UserOutlined/>} placeholder=\"* 닉네임(3글자-10글자)\" maxLength={10}/>\n                      </Form.Item>\n                    \n                    </Col>\n                    <Col xs={{span: 24}} sm={{ span: 11, offset: 2 }}>\n                      <Form.Item\n                        name=\"password\"\n                        rules={[\n                          { required: true, message: '비밀번호를 입력해 주세요 :D' },\n                          { min: 4, message: '4자를 입력해 주세요 :D' },\n                          { max: 4, message: '4자를 입력해 주세요 :D' }\n                        ]}\n                      >\n                        <Input.Password size=\"large\" prefix={<KeyOutlined/>} placeholder=\"* 비밀번호(4자리)\" maxLength={4}/>\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                  </div>\n                  <div>\n                  <Form.Item\n                        name=\"content\"\n                        \n                        rules={[\n                          { required: true, message: '내용을 입력해 주세요 :D' },\n                          { min: 3, message: '3글자 이상 입력해 주세요 :D' },\n                          { max: 500, message: '최대 500글자까지 입력할 수 있어요 :D' }\n                        ]}\n                  >\n                    <TextArea  \n                      placeholder=\"내용을 입력해주세요 :)\"\n                      autoSize={{ minRows: 6, maxRows: 10 }}\n                      showCount maxLength={500} \n                    />\n                  </Form.Item>  \n                  </div>\n                  <hr className=\"modal-hr\"/>\n                  <Form.Item className='post-button'>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                      게시\n                    </Button>\n                  </Form.Item>\n\n                  </Form>\n                </Modal>\n                <List\n                  itemLayout=\"horizontal\"\n                  dataSource={comment}\n                  renderItem={(comment) => (\n                    <li id={comment.id}>\n                      <Comment\n                        actions={[<span onClick={() => handleRemove(comment.id)}>삭제</span>]}\n                        author={comment.username}\n                        avatar= 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png'\n                        content={comment.content}\n                        datetime={\n                          comment.created_at?\n                          moment(comment.created_at.split('.')[0],  'YYYY.MM.DD.HH.mm.ss ').fromNow() :\n                          moment(moment().format().split('.')[0],  'YYYY.MM.DD.HH.mm.ss ').fromNow()\n                        }\n                      />\n\n\n                    </li>\n                  )}\n                />\n\n                <Modal\n                  title=\"비밀번호(4자리)\"\n                  centered\n                  visible={commentModal}\n                  onOk={() => checkPassword}\n                  onCancel={() => setCommentModal(false)}\n                >\n                  <Form\n                  name=\"comment_delete\"\n                  initialValues={{ remember: true }}\n                  onFinish={checkPassword}\n                 >\n                    <Form.Item\n                      name=\"password\"\n                      rules={[\n                          { required: true, message: '비밀번호를 입력해 주세요 :D' },\n                          { min: 4, message: '4자를 입력해 주세요 :D' },\n                          { max: 4, message: '4자를 입력해 주세요 :D' }\n                      ]}\n                    >\n                      <Input.Password maxLength={4}/>\n                    </Form.Item>\n\n                    <Col xs={{span: 24}}>\n                      <Form.Item className=\"post-button\">\n                        <Button type=\"danger\" htmlType=\"submit\">\n                          삭제\n                        </Button>\n                      </Form.Item>\n                    </Col>    \n                  </Form>\n                </Modal>\n\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nexport default Speach;","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/rank/ranking/tab/FirstRank.js",[],"/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/rank/ranking/tab/AveRank.js",[],"/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/rank/table_list/tab/FirstTable.js",["110","111"],"import React, { useEffect, useState } from 'react';\nimport { axiosInstance } from '../../../../api';\nimport { Col, Row, Table, Badge, Spin} from 'antd';\n\nconst FirstTable = ({uniq_num}) => {\n      const columns = [\n           { title: '순위', dataIndex: 'rank', key: '1' },\n           { title: '기업', width: 215, dataIndex: 'name', key: '2'},\n           { title: '기본급', dataIndex: 'nomal', key: '3', sorter: {compare: (a, b) => a.nomal - b.nomal} },\n           { title: '고정수당', dataIndex: 'fixed', key: '4', sorter: {compare: (a, b) => a.fixed - b.fixed} },\n           { title: '실적수당', dataIndex: 'performance', key: '5', sorter: {compare: (a, b) => a.performance - b.performance} },\n           { title: '복리후생비', dataIndex: 'benefit', key: '6', sorter: {compare: (a, b) => a.benefit - b.benefit} },\n           { title: '성과 상여금', dataIndex: 'person_bonus', key: '7', sorter: {compare: (a, b) => a.person_bonus - b.person_bonus} },\n           { title: '경평 성과급', dataIndex: 'company_bonus', key: '8', sorter: {compare: (a, b) => a.company_bonus - b.company_bonus} },\n           { title: '기타', dataIndex: 'etc', key: '9', sorter: {compare: (a, b) => a.etc - b.etc}},\n           {\n              title: '총 연봉',\n              key: 'operation',\n              fixed: 'right',\n              width: 100,\n              dataIndex: 'total',\n              sorter: {compare: (a, b) => a.total - b.total,multiple: 1},\n            },\n        ];\n  \n         \n      const [all, setAll] = useState(\"processing\");\n      const [location, setLocation] = useState(\"default\");\n      const [superCompany, setSuperCompany] = useState(\"default\");\n      const [category, setCategory] = useState(\"default\");\n  \n      const [allMoney, setAllMoney] = useState();\n      \n\n      const [url, setUrl] = useState(`/api/first_money/${uniq_num}/all`)\n      \n      useEffect(() => {\n          axiosInstance.get(url)\n              .then(response => {\n                  const {data} = response;\n                  setAllMoney(data);\n                  setAllData(data);\n              })      \n      }, [])\n  \n  \n      const [allData, setAllData] = useState();\n      const changeAll = () =>{\n        if(all === \"default\"){\n            setAll(\"processing\")\n            setLocation(\"default\")\n            setSuperCompany(\"default\")\n            setCategory(\"default\")\n        }\n\n        setAllMoney(allData);\n      }\n      \n      const [locationData, setLocationData] = useState()\n      const changeLocation = () =>{\n          if(location === \"default\"){\n                setAll(\"default\")\n                setLocation(\"processing\")\n                setSuperCompany(\"default\")\n                setCategory(\"default\")\n \n                if(!locationData){\n                    setAllMoney();\n                    axiosInstance.get(`/api/first_money/${uniq_num}/location`)\n                        .then(response => {\n                            const {data} = response;\n                            setLocationData(data);\n                            setAllMoney(data);\n                        })   \n                }else{\n                    setAllMoney(locationData)\n                }            \n          }\n      }\n\n      const [authorityData, setAuthorityData] = useState()\n      const changeSuperCompany = () =>{\n          if(superCompany === \"default\"){\n              setAll(\"default\")\n              setLocation(\"default\")\n              setSuperCompany(\"processing\")\n              setCategory(\"default\")\n\n              if(!authorityData){\n                setAllMoney();\n                axiosInstance.get(`/api/first_money/${uniq_num}/authority`)\n                    .then(response => {\n                        const {data} = response;\n                        setAuthorityData(data);\n                        \n                        setAllMoney(data)\n                    })   \n                }else{\n                    setAllMoney(authorityData)\n                }\n          }\n      }\n  \n      const [typeData, setTypeData] = useState()\n      const changeCategory = () =>{\n          if(category === \"default\"){\n              setAll(\"default\")\n              setLocation(\"default\")\n              setSuperCompany(\"default\")\n              setCategory(\"processing\")\n              \n                if(!typeData){\n                    setAllMoney();\n                    axiosInstance.get(`/api/first_money/${uniq_num}/type`)\n                    .then(response => {\n                        const {data} = response;\n                        setTypeData(data);\n                        setAllMoney(data)\n                    })   \n                }else{\n                    setAllMoney(typeData)\n                }\n          }\n      }  \n  \n  \n        \n  \n\n    return (\n        <>\n        <Row>\n            <Col span={24}>\n                <div className=\"choice\">\n                    <Badge status={all} onClick={changeAll} text=\"전체\"/>\n                    <Badge status={location} onClick={changeLocation} text=\"소재지\"/>\n                    <Badge status={superCompany} onClick={changeSuperCompany} text=\"주무부처\"/>\n                    <Badge status={category} onClick={changeCategory} text=\"기관유형\"/>\n                </div>\n            </Col>\n        </Row>\n\n        <Row className=\"table_wrapper\">\n            <Col className=\"table-colum\" xs={{span: 24}} sm={{ span: 24}}>\n            \n            {allMoney ? <Table \n            columns={columns} \n            dataSource={allMoney} \n            scroll={{ x: 1200 }}\n            pagination={{hideOnSinglePage: false}} \n            /> :  <Spin size=\"large\"/>\n            }\n            </Col>\n\n            <Col className=\"source\"xs={{span: 24}} sm={{ span: 24 }}>\n                단위 : 천 원\n                <br/>\n                출처 : 알리오('21년)\n            </Col>\n        </Row>    \n        </>\n    );\n};\n\nexport default FirstTable;","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/rank/table_list/tab/AveTable.js",["112","113"],"import React, { useEffect, useState } from 'react';\nimport { axiosInstance } from '../../../../api';\nimport { Col, Row, Table, Badge, Spin} from 'antd';\n\nconst AveTable = ({uniq_num}) => {\n  \n      const columns = [\n           { title: '순위', dataIndex: 'rank', key: '1' },\n           { title: '기업', width: 215, dataIndex: 'name', key: '2'},\n           { title: '기본급', dataIndex: 'nomal', key: '3', sorter: {compare: (a, b) => a.nomal - b.nomal} },\n           { title: '고정수당', dataIndex: 'fixed', key: '4', sorter: {compare: (a, b) => a.fixed - b.fixed} },\n           { title: '실적수당', dataIndex: 'performance', key: '5', sorter: {compare: (a, b) => a.performance - b.performance} },\n           { title: '복리후생비', dataIndex: 'benefit', key: '6', sorter: {compare: (a, b) => a.benefit - b.benefit} },\n           { title: '성과 상여금', dataIndex: 'person_bonus', key: '7', sorter: {compare: (a, b) => a.person_bonus - b.person_bonus} },\n           { title: '경평 성과급', dataIndex: 'company_bonus', key: '8', sorter: {compare: (a, b) => a.company_bonus - b.company_bonus} },\n           { title: '기타', dataIndex: 'etc', key: '9', sorter: {compare: (a, b) => a.etc - b.etc}},\n           {\n              title: '총 연봉',\n              key: 'operation',\n              fixed: 'right',\n              width: 100,\n              dataIndex: 'total',\n              sorter: {compare: (a, b) => a.total - b.total,multiple: 1},\n            },\n        ];\n  \n         \n      const [all, setAll] = useState(\"processing\")\n      const [location, setLocation] = useState(\"default\")\n      const [superCompany, setSuperCompany] = useState(\"default\")\n      const [category, setCategory] = useState(\"default\")\n  \n      const [allMoney, setAllMoney] = useState();\n      \n  \n      const [url, setUrl] = useState(`/api/ave_money/${uniq_num}/all`)\n      \n      useEffect(() => {\n        axiosInstance.get(url)\n              .then(response => {\n                  const {data} = response;\n                  setAllMoney(data);\n                  setAllData(data);\n              })      \n      }, [])\n  \n\n  \n      const [allData, setAllData] = useState();\n      const changeAll = () =>{\n        if(all === \"default\"){\n            setAll(\"processing\")\n            setLocation(\"default\")\n            setSuperCompany(\"default\")\n            setCategory(\"default\")  \n        }\n\n        setAllMoney(allData);\n      }\n\n      const [locationData, setLocationData] = useState()\n      const changeLocation = () =>{\n          if(location === \"default\"){\n              setAll(\"default\")\n              setLocation(\"processing\")\n              setSuperCompany(\"default\")\n              setCategory(\"default\")\n\n              if(!locationData){\n                setAllMoney();\n                axiosInstance.get(`/api/ave_money/${uniq_num}/location`)\n                    .then(response => {\n                        const {data} = response;\n                        setLocationData(data);\n                        setAllMoney(data);\n                    })   \n                }else{\n                    setAllMoney(locationData)\n                }        \n          }\n      }\n\n      const [authorityData, setAuthorityData] = useState()\n      const changeSuperCompany = () =>{\n          if(superCompany === \"default\"){\n              setAll(\"default\")\n              setLocation(\"default\")\n              setSuperCompany(\"processing\")\n              setCategory(\"default\")\n\n              if(!authorityData){\n                setAllMoney();\n                axiosInstance.get(`/api/ave_money/${uniq_num}/authority`)\n                    .then(response => {\n                        const {data} = response;\n                        setAuthorityData(data);\n                        \n                        setAllMoney(data)\n                    })   \n                }else{\n                    setAllMoney(authorityData)\n                }\n          }\n      }\n  \n      const [typeData, setTypeData] = useState()\n      const changeCategory = () =>{\n          if(category === \"default\"){\n              setAll(\"default\")\n              setLocation(\"default\")\n              setSuperCompany(\"default\")\n              setCategory(\"processing\")\n\n              if(!typeData){\n                setAllMoney();\n                axiosInstance.get(`/api/ave_money/${uniq_num}/type`)\n                .then(response => {\n                    const {data} = response;\n                    setTypeData(data);\n                    setAllMoney(data)\n                })   \n            }else{\n                setAllMoney(typeData)\n            }\n          }\n      }  \n  \n  \n        \n  \n\n    return (\n        <>\n        <Row>\n            <Col span={24}>\n                <div className=\"choice\">\n                    <Badge status={all} onClick={changeAll} text=\"전체\"/>\n                    <Badge status={location} onClick={changeLocation} text=\"소재지\"/>\n                    <Badge status={superCompany} onClick={changeSuperCompany} text=\"주무부처\"/>\n                    <Badge status={category} onClick={changeCategory} text=\"기관유형\"/>\n                </div>\n            </Col>\n        </Row>\n\n        <Row className=\"table_wrapper\">\n            <Col className=\"table-colum\" xs={{span: 24}} sm={{ span: 24}}>\n            {allMoney ? <Table \n            columns={columns} \n            dataSource={allMoney} \n            scroll={{ x: 1200 }}\n            pagination={{hideOnSinglePage: false}} \n            /> :  <Spin size=\"large\"/>\n            }\n            </Col>\n        </Row>    \n        </>\n    );\n};\n\nexport default AveTable;","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/pages/accounts/SignInPage.js",[],"/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/accounts/signup/SignUp.js",[],"/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/components/accounts/signin/SignIn.js",["114"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col, Form, Input, Button, notification } from 'antd';\nimport { SmileOutlined } from '@ant-design/icons';\nimport Axios from 'axios';\nimport useLocalStorage from '../../../utils/useLocalStorage'\nimport  '../signin/SignIn.scss';\n\n\n\n\nconst SignIn = () => {\n    const history = useHistory();\n    const [jwtToken, setJwtToken] = useLocalStorage(\"jwtToken\", \"\");\n\n\n    const onFinish = values => {\n        const {email, password} = values;\n\n\n        const data = {email, password}\n        Axios.post(\"http://localhost:8000/accounts/token/\", data)\n            .then(response => {\n                const {data : {token : jwtToken}} = response\n                setJwtToken(jwtToken);\n                notification.open({\n                    message: '로그인 완료',\n                    icon: <SmileOutlined style={{color: '#108ee9'}}/>\n                })\n\n                history.push('/')\n            })\n            .catch(error => {\n                console.log(error.response)\n            })\n        \n    }\n    return (\n        <>\n          <Row >\n              <Col sm={{ span: 8, offset: 8 }}>\n                <Form\n                className=\"form\"\n                name=\"basic\"\n                size={\"large\"}\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}\n                onFinish={onFinish}\n                >\n                <h2>로그인</h2>\n                <hr/>\n                <Form.Item\n                    label=\"이메일\"\n                    name=\"email\"\n                    rules={[\n                        { required: true, message: \"이메일을 입력해 주세요 :)\" },\n                        { message: \"이메일을 입력해 주dd세요 :)\" }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"비밀번호\"\n                    name=\"password\"\n                    rules={[\n                        { required: true, message: \"비밀번호를 입력해 주세요 :)\" },\n                        { min: 8, message: \"최소 8글자를 입력해주세요 :)\" },\n                        { max: 20, message: \"최대 20글자를 입력해주세요 :)\" },\n                    ]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ offset: 10, span: 4 }}>\n                    <Button type=\"primary\" htmlType=\"submit\" style={{width:'100%'}}>\n                    로그인\n                    </Button>\n                </Form.Item>\n                </Form>\n              </Col>\n          </Row>\n        </>\n    );\n};\n\nexport default SignIn;","/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/utils/useLocalStorage.js",[],"/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/api.js",[],"/Users/sm/Desktop/개인/02.사이드프로젝트/01.company_money/pjt/frontend/src/Constants.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"123","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":15},{"ruleId":"119","severity":1,"message":"124","line":6,"column":10,"nodeType":"121","messageId":"122","endLine":6,"endColumn":30},{"ruleId":"115","replacedBy":"125"},{"ruleId":"117","replacedBy":"126"},{"ruleId":"119","severity":1,"message":"127","line":2,"column":28,"nodeType":"121","messageId":"122","endLine":2,"endColumn":33},{"ruleId":"128","severity":1,"message":"129","line":52,"column":8,"nodeType":"130","endLine":52,"endColumn":10,"suggestions":"131"},{"ruleId":"128","severity":1,"message":"132","line":38,"column":8,"nodeType":"130","endLine":38,"endColumn":10,"suggestions":"133"},{"ruleId":"119","severity":1,"message":"134","line":88,"column":14,"nodeType":"121","messageId":"122","endLine":88,"endColumn":22},{"ruleId":"119","severity":1,"message":"135","line":35,"column":19,"nodeType":"121","messageId":"122","endLine":35,"endColumn":25},{"ruleId":"128","severity":1,"message":"136","line":44,"column":10,"nodeType":"130","endLine":44,"endColumn":12,"suggestions":"137"},{"ruleId":"119","severity":1,"message":"135","line":36,"column":19,"nodeType":"121","messageId":"122","endLine":36,"endColumn":25},{"ruleId":"128","severity":1,"message":"136","line":45,"column":10,"nodeType":"130","endLine":45,"endColumn":12,"suggestions":"138"},{"ruleId":"119","severity":1,"message":"139","line":14,"column":12,"nodeType":"121","messageId":"122","endLine":14,"endColumn":20},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ReactGA' is defined but never used.","'createBrowserHistory' is defined but never used.",["140"],["141"],"'Image' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'aveMoneyUrl' and 'firstMoneyUrl'. Either include them or remove the dependency array.","ArrayExpression",["142"],"React Hook useEffect has missing dependencies: 'commentUrl' and 'idUrl'. Either include them or remove the dependency array.",["143"],"'password' is assigned a value but never used.","'setUrl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["144"],["145"],"'jwtToken' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"150","fix":"152"},"Update the dependencies array to be: [aveMoneyUrl, firstMoneyUrl]",{"range":"153","text":"154"},"Update the dependencies array to be: [commentUrl, idUrl]",{"range":"155","text":"156"},"Update the dependencies array to be: [url]",{"range":"157","text":"158"},{"range":"159","text":"158"},[1686,1688],"[aveMoneyUrl, firstMoneyUrl]",[1117,1119],"[commentUrl, idUrl]",[2054,2056],"[url]",[2049,2051]]